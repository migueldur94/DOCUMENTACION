:::::::::::::::::::::::::::::::::::::::::BASE DE DATOS::::::::::::::::::::::::::::::::::::::::::::::::

:::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::HERRAMIENTAS
:::::::::::::::::::::::::::::::::::::::::::
[Dbeaver]
Permite mostrar diferentes base de datos, desde una misma interfaz grafica sin importar cual es el motor de base de datos


:::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::POSTGRES
:::::::::::::::::::::::::::::::::::::::::::

::::::::Comandos::::::::

[Iniciar el servicio de postgres]
sudo su - postgres

[Ingresar a la consulta de postgres]
psql

[Alterar un tipo de dato de una columna]
ALTER TABLE table_name ALTER COLUMN column_name TYPE varchar(5000);

[Alterar el nombre de una columna]
ALTER TABLE table_name RENAME column_name TO new_column_name;

[Eliminar tabla]
DROP TABLE nombre_tabla

[Eliminar campo]
ALTER TABLE nombre_tabla DROP COLUMN nombre_columna

[Cambiar columna not null]
ALTER TABLE nombre_tabla ALTER COLUMN nombre_columna SET NOT NULL;

[Cambiar columna null]
ALTER TABLE nombre_tabla ALTER COLUMN nombre_columna DROP NOT NULL;

:::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::MYSQL
:::::::::::::::::::::::::::::::::::::::::::

::Docker
docker run -p 3306:3306 --name mysql -e MYSQL_ROOT_PASSWORD=creandosoft -d mysql:5.7 --character-set-server=utf8 --collation-server=utf8_unicode_ci

::Console
[Para ingresar a mysql]
mysql -u root -p

:::::::::::::::::::::::::::::::::::::::::FRONT-END::::::::::::::::::::::::::::::::::::::::::::::::


:::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::ANGULAR
:::::::::::::::::::::::::::::::::::::::::::

::::::::Comandos::::::::

[Descargar ultima version]

npm install -g @angular/cli

[Descargar version especifica]
npm install -g @angular/cli@1.0.0

[Decidir ruta del proyecto]
cd my-project

[Crear nuevo proyecto]
ng new my-project

[Iniciar server de angular]
ng serve

[Crear paquete de componente]
--------------------------------------------
 ng g c --name "nombre"
-------------------------------------------- 
ng g c home/consultar-guia --flat -is --spec=false
flat: no crea carpeta
spec:  no crear archivo de pruebas
--------------------------------------------

[Desinstalar angular]
npm uninstall -g @angular/cli

[Limpiar cache]
npm cache clean

[Problemas sass]
npm rebuild node-sass

[Bajar el server]
--------------------------------------------
sudo kill $(sudo lsof -t -i:4200)
--------------------------------------------
fuser -n tcp "4200"<-Puerto
kill -9 "7425"<-PID
--------------------------------------------

[Compilacion del proyecto]
npm run ng build --prod

[En caso que no recompile]
ng serve --poll=2000

:::::::::::::::::::::::::::::::::::::::::::
:::::JSF
:::::::::::::::::::::::::::::::::::::::::::

[AUTOCOMPLETAR]
xmlns:cs="http://creandosoft.com/ui"

<cs:csAutoComplete
	value="#{objeto.arl}"
	completeMethod="#{autocompletarFormBean.completeFondoArl}"
	var="p" 
	itemLabel="#{p.descripcion}" 
	itemValue="#{p}"
	converter="autoConverter" 
	forceSelection="true"
	size="#{usuario.filasAutoCompletar-10}"
	autoCompleteId="TB_FONDO_ARL"
	scrollHeight="#{usuario.scrollHeight}"/>
	
<p:ajax event="itemSelect" update="destinatario" listener"#{}"/>

</cs:csAutoComplete>
	
[CALENDAR]

<p:calendar 
	value="#{queryObject.fechaInicio}" 
	showOn="button"
	locale="#{usuario.localidad}" 
	navigator="true"
	pattern="#{usuario.formatoFecha}" 
	size="10" 
	disabled="false"
	onkeydown="formatearFecha(this)"
	onkeypress="formatearFecha(this)" 
	maxlength="10" 
	effect="fade" />

[OUTPUTLABEL]

<p:outputLabel value="#{msgResource.lbl_pages_recovery_arl_edit_header_date_disability}" />

[COMMANDBUTTON]

<p:commandButton 
	value="#{msgResource.cmd_buscar}"
	id="cmdBuscar" icon="ui-icon-search"
	title="#{msgResource.tip_buscar}" style=" margin-bottom:10px;"
	styleClass="secondary textColorWhite"
	action="#{recoveryArlFormBean.enviarBuscar}" ajax="false"
	onclick="mostrarBloqueo()" />

[DATATABLE]
	
<p:contextMenu for="dtMtto">
	<p:menuitem 
		value="#{msgResource.cmd_eliminar}" 
		update="dtMtto"
		styleClass="Fs12" icon="ui-icon-delete"
		actionListener="#{tbEscalaImcFormBean.enviarBorrar}"
		ajax="false" />
</p:contextMenu>

<p:dataTable id="dtMtto" var="iteraQuery"
	value="#{tbEscalaImcFormBean.list}" paginator="true"
	paginatorPosition="bottom" rows="#{usuario.lineas}"
	pageLinks="#{usuario.links}"
	rowKey="#{iteraQuery.consecutivo}"
	selection="#{tbEscalaImcFormBean.selectedObject}"
	selectionMode="single" styleClass="mantenimientoResultados"
	reflow="true" emptyMessage="#{msgResource.titulo_panel_no_datos}">

	<p:column styleClass="centered" width="5%">
		<p:commandButton action="#{tbEscalaImcFormBean.enviarEditar}"
			ajax="false" icon="ui-icon-create"
			title="#{msgResource.tip_editar}"
			styleClass="BlueTextButton RaisedButton"
			onclick="mostrarBloqueo()">
			<f:param name="llaveProceso"
				value="#{iteraQuery.consecutivo}" />
		</p:commandButton>
	</p:column>

	<p:column styleClass="righted" width="10%"
		headerText="#{msgResource.lbl_page_vigilancia_escala_imc_query_tabla_imc}">
		<h:outputText value="#{iteraQuery.consecutivo}"></h:outputText>
	</p:column>
	
</p:dataTable>

[CREAR OBJETO EN VISTA]

<ui:param name="objeto" value="#{auditManagementFormBean.object" />

[NUMBER]

<p:inputNumber 
	thousandSeparator="."
	decimalSeparator="," 
	inputStyleClass="numero"
	value="#{objetoI.valorTotalRecobro}" 
	decimalPlaces="2">
	<p:ajax event="change" update="valorTotalRecobro" listener="#{recoveryArlFormBean.validarRecobro(objetoI)}"/>
</p:inputNumber>

[DIALOG O POPUP]

 <p:dialog id="dialogoDetalleFacturas" 
	header="#{msgResource.lbl_pages_factura_electronica_titulo}"
	widgetVar="dlgDetalleFacturas" modal="true" dynamic="false" 
	resizable="false" showEffect="fade" hideEffect="fade" 
	styleClass="modalDashboard"> 
	<ui:fragment> 
		<ui:include 
			src="/pages/procesos/facturacionelectronicarecibida/facturacionelectronicarecibidadetalle.xhtml" /> 
	</ui:fragment> 
</p:dialog> 

[COMBO]

<p:selectOneMenu value="#{objeto.tipoPreferencia}"
	effect="fade" style="text-align:left;">
	<f:selectItem itemLabel="-" itemValue="-1" />
	<f:selectItems
		value="#{comboFormBean.getCombo('COMBO_TYPE_PREFERENCE')}"
		var="combo" itemLabel="#{combo.nombre}"
		itemValue="#{combo.id}" />
</p:selectOneMenu>

[INPUTTEXT]

<p:inputText style="text-transform: uppercase"
	converter="toUpperCaseConverter" maxlength="20"
	value="#{afDespues.numeroIdentificacion}" />

-----------------------------------------------------
----ESTRUCTURA GENERICAS
-----------------------------------------------------

[BOTONES ATRAS Y ACTUALIZAR]

<div class="ui-g">
	<div class="#{objeto.gestionCerrada?'ui-g-5 ui-md-6 ui-lg-5':'ui-g-5 ui-md-3 ui-lg-4'}"></div>
	<div class="ui-g-12 ui-md-6 ui-lg-4">
		<div class="ui-g-4 ui-md-4">
			<p:commandButton value="#{msgResource.cmd_anterior}"
				icon="ui-icon-reply" title="#{msgResource.tip_anterior}"
				style=" margin-bottom:10px;"
				styleClass="secondary textColorWhite"
				action="#{auditManagementFormBean.enviarAnterior}" ajax="false"
				onclick="mostrarBloqueo()" />
			<div class="EmptyBox5 ShowOnMobile"></div>
		</div>
		<div class="ui-g-4 ui-md-4">
			<p:commandButton value="#{msgResource.cmd_actualizar}"
				id="cmdActualizar" icon="ui-icon-autorenew"
				title="#{msgResource.tip_actualizar}"
				style=" margin-bottom:10px;"
				styleClass="secondary textColorWhite"
				action="#{auditManagementFormBean.enviarActualizar}"
				ajax="false" onclick="mostrarBloqueo()" />
			<p:defaultCommand target=":formMtto:cmdActualizar" />
			<div class="EmptyBox5 ShowOnMobile"></div>
		</div>
	</div>
	<div class="ui-g-4 ui-md-3 ui-lg-4"></div>
</div>

:::::::::::::::::::::::::::::::::::::::::::
:::::FLUTTER
:::::::::::::::::::::::::::::::::::::::::::

::::::::Comandos::::::::
[Asignar path]
export PATH="$PATH:/home/system/Documentos/Tecnologias/Android/Flutter/flutter/bin"

[Construir apk]
flutter build apk --split-per-abi

:::::::::::::::::::::::::::::::::::::::::::
:::::STYLUS
:::::::::::::::::::::::::::::::::::::::::::

::::::::Comandos::::::::

[Instalar]
npm i stylus

[Ver y recompilar en caliente]
stylus -w stylus/mi_estilo.styl -o stylus/mi_estilo.css



:::::::::::::::::::::::::::::::::::::::::::
:::::FRAMEWORK7
:::::::::::::::::::::::::::::::::::::::::::

::::::::Comandos::::::::
 - ðŸ”¥ Run "npm run start" - run development server
  - ðŸ”§ Run "npm run dev" - run development server
  - ðŸ”§ Run "npm run build-dev" - build web app using development mode (faster build without minification and optimization)
  - ðŸ”§ Run "npm run build-prod" - build web app for production


:::::::::::::::::::::::::::::::::::::::::BACK-END::::::::::::::::::::::::::::::::::::::::::::::::

:::::::::::::::::::::::::::::::::::::::::::
:::::SPRING
:::::::::::::::::::::::::::::::::::::::::::

//Como obtener una entidad por campo primary key
CtPacienteComplemento complemento = dao().getEm().find(CtPacienteComplemento.class, paciente.getConsecutivoPaciente());

//Relacion falsa
@ManyToOne(fetch = FetchType.LAZY)
  @JoinColumn(name = "CodServicio", insertable = false, updatable = false)
  private TFacturable tFacturable;

//Varios campos
  @JoinColumns({ @JoinColumn(name = "CodDocumento", referencedColumnName = "CodDocumento", insertable = false, updatable = false), @JoinColumn(name = "NumDocumento", referencedColumnName = "NumDocumento", insertable = false, updatable = false), @JoinColumn(name = "NumDocumentoCC", referencedColumnName = "NumNegocio", insertable = false, updatable = false) })
  @ManyToOne(optional = false, fetch = FetchType.LAZY)
  private MFactura mFactura;
  
//Incrementar consecutivo
dao().getSequence(NextValues.TB_PERFIL)

// Mergue
dao().getEm().merge(complemento);

//MÃ©todo para conseguir el dto de una clase por el consecutivo (Long)
@Override
  @Transactional(propagation = Propagation.REQUIRED)
  public Object getObjetoPorConsecutivo(Object object) {
    try {
      return dao().getEm().find(((FmDto) object).getEntity().getClass(), Long.parseLong(((FmDto) object).getKeyValue().toString())).getDto();
    }
    catch (Exception e) {
      LOG.error(e.getMessage(), e);
      throw new RuntimeException(e);
    }
  }


:::::::::::::::::::::::::::::::::::::::::::
:::::STRUST
:::::::::::::::::::::::::::::::::::::::::::

[Conceptos]: Struts es una tecnologÃ­a que utiliza a Java como lenguaje de programaciÃ³n
[Route]
"struts-config.....xml" En este archivo se van a configurar todas las rutas de las pantallas a donde se necesite ir, 
en caso que no sea configurada en este archivo la aplicaciÃ³n mostrara un error
<action path="/cargatbetapacovid" type="com.creandosoft.administrativo.mtto.actions.CargatbetapacovidmttoAction" >
  <forward name="enviocargatbetapacovidmtto" path="/mtto/tbetapacovid.jsp" />
</action>
===> path="/cargatbetapacovid" 
Es la ruta que se configura en el menÃº por que es la primera donde va a llegar, 
no interesa el nombre que se le coloque pero este nombre es el se va a configurar con la extensiÃ³n .do

===> type="com.creandosoft.administrativo.mtto.actions.CargatbetapacovidmttoAction"
Es el archivo java que se ejecuta al cargar la pantalla y este contiene las variables que se van a cargar la pÃ¡gina

===> name="enviocargatbetapacovidmtto"
Este nombre debe ser igual al que esta en la variable "envio" del archivo Carga

<action
  attribute="tbetapacovidmttoFormBean"
  input="/mtto/tbetapacovid.jsp"
  name="tbetapacovidmttoFormBean"
  path="/tbetapacovid"
  scope="request"
  type="com.creandosoft.administrativo.mtto.actions.TbetapacovidmttoAction" >
  <forward name="reenviotbetapacovid" path="/mtto/tbetapacovid.jsp" />
</action>



[LABEL]
	[NORMAL]
		<bean-el:message key="lbl.pages.mipresprescripcion.consulta.filtro.fecha_inicio" bundle="${usuario.idioma}" />
	[NEGRITA]
	<strong><bean-el:message key="lbl.mtto.vehiculo.vinculacion" bundle="${usuario.idioma}"  />:</strong> 

[BOTONES CONSULTA]

<table class="letra" cellpadding="2" cellspacing="2" align="center">
	<tr>
		<td align="left">
			<LABEL
				title="<bean-el:message key="tip.buscar" bundle="${usuario.idioma}" />">
				<html:button property="enviar"
					onclick="enviarFormulario('Buscar');return false"
					styleClass="boton1">
					<bean-el:message key="cmd.buscar" bundle="${usuario.idioma}" />
				</html:button>
			</LABEL>
		</td>
		<td align="left">
			<LABEL
				title="<bean-el:message key="tip.limpiar" bundle="${usuario.idioma}" />">
				<html:button property="enviar"
					onclick="enviarFormulario('Borrador');return false"
					styleClass="boton1">
					<bean-el:message key="cmd.limpiar" bundle="${usuario.idioma}" />
				</html:button>
			</LABEL>
		</td>
		<td align="left">
			<LABEL
				title="<bean-el:message key="tip.exportar" bundle="${usuario.idioma}" />">
				<html:button property="enviar"
					onclick="enviarFormulario('Exportar');return false"
					styleClass="boton1">
					<bean-el:message key="cmd.exportar" bundle="${usuario.idioma}" />
				</html:button>
			</LABEL>
		</td>
	</tr>
</table>

[FECHA]
<html:text  
	name="logauditoriaautorizacionFormBean" 
	property="cierreFinC" 
	size="10" 
	maxlength="10"
	onkeyup="formatearFecha(this);" 
	onkeypress="formatearFecha(this);"
	onclick="popUpCalendar(this, this);return false"
	styleId="txtCierreFin"
	/>
	
[POPUP]
<html:hidden name="contratostarifacupsFormBean" property="ipsC" styleId="txtIps" />
<LABEL title = "<bean-el:message key="tip.ayuda" bundle="${usuario.idioma}"/>">
<html-el:text name="contratostarifacupsFormBean" property="razonSocialIpsC" maxlength="100" size="50"
	styleId="txtIpsDescripcion" styleClass="popup" onclick="seleccionar(this);"
	onfocus="tablaGlobal='TB_IPS';abiertoGlobal='NO_OK';codigoGlobal=document.getElementById('txtIps');descripcionGlobal=document.getElementById('txtIpsDescripcion');"
	onchange="getValor('TB_IPS',this.value,'',-1,'txtIps','txtIpsDescripcion','NO');"
	/>
</LABEL>
<LABEL title="<bean-el:message key="tip.clic" bundle="${usuario.idioma}"/>">
	<html-el:button property="enviar" 
		onclick="openChild('cargapopup.do?tabla=TB_IPS&abierto=NO_OK&cache=NO&aux=','win2');codigoGlobal=document.getElementById('txtIps');descripcionGlobal=document.getElementById('txtIpsDescripcion');"
		styleClass="botonAyuda" value="A" />
</LABEL>
<LABEL title = "<bean-el:message key="tip.borrar" bundle="${usuario.idioma}"/>">
	<html-el:button property="enviar" 
	onclick="document.getElementById('txtIps').value='-1';document.getElementById('txtIpsDescripcion').value='';" 
	styleClass="botonEliminar" value="A"/>
</LABEL>

[TEXT]
<html:text 
	property="numeroContratoC" 
	name="contratostarifacupsFormBean" 
	size="30" 
	maxlength="30"
	styleId="txtNumeroContrato" 
	/>
	
[COMBO]
<html:select 
	name="loginFormBean" 
	property="vista" 
	styleId="txtVista">
	<html:option value="-1">---------------</html:option>
	<html:options 
		collection="listaTipoVista" 
		property="valor" 
		labelProperty="texto"/>
</html:select>

//Incrementar consecutivo
this.getConsecutivo(EConsecutivo.SIIC_TB_PROCESO_CONSECUTIVO_SIIGO.getNombre())

:::::::::::::::::::::::::::::::::::::::::::
:::::NODEJS
:::::::::::::::::::::::::::::::::::::::::::

::::::::Comandos::::::::

[Limpiar los procesos que se corren con nodejs]
sudo pkill -f node

[Construir dist]
npm run-script build

:::::::::::::::::::::::::::::::::::::::::DEVOPS::::::::::::::::::::::::::::::::::::::::::::::::

:::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::DOCKER
:::::::::::::::::::::::::::::::::::::::::::
Descripcion: Docker esta hecho en go

Pagina --> https://hub.docker.com/

::::::::Comandos Linux::::::::

//Para que el usuario de la sesiÃ³n de linux no tenga que esta colocando sudo al inicio de las sentencias
sudo usermod -aG docker nombre_usuario
-> Despues cerramos sesiÃ³n para que tome los cambios

//Para visualizar la informaciÃ³n del contenedor

//Crear un contenedor
docker run nombre_imagen

// Para correr un contenedor
docker start nombre_contenedor

// Para detener un contenedor
docker stop nombre_contenedor

// Para visualizar los contenedores
sudo docker ps

// Nos permite ver el estado de los contenedores
sudo docker ps -a

// Nos permite visualizar toda la metadata del contenedor, osea la cantidad disco que tiene
docker inspect -f '{{json .Config.Env}}' nombreDelContenedor

//Renombrar un contendor
docker rename nombre_contenedor_anterior nombre_contenedor_nuevo

// Mirar el output de un contendor
docker logs nombre_contenedor

// Eliminar un contenedor
docker rm nombre_contenedor

// Eliminar todos los contenedores 
docker rm $(docker ps -aq)

// Listar los ids de los contenedores
docker ps -aq

// Hacer que todos los comandos se realicen en la misma terminar
docker exec -it nombre_contenedor nombre_comando

[Puertos]

// Con este comando enrutamos el puerto [puerto_contenedor] y docker lo redirecciona al [puerto_contenedor]
[puerto_mi_maquina]: Este puerto es un puerto de la maquina donde estan los contenedores la cual cuando vayamos a ingresar por la web este es el puerto que se publicara y serÃ¡ redirigido por docker a el puerto del server dentro del contenedor 
[puerto_contenedor]: Este es el puerto del servidor que se publicara dentro del contenedor 
docker run -d --name nombre_contenedor -p puerto_mi_maquina:puerto_contenedor nombre_imagen


-> Para crear un entorno de desarrollo
Se crea un Dockerfile donde va ha contener todas las sentencias que se ejecutaran para la imagen
// Comando para construir la imagen propia de node
[.]-> Hace referencia donde esta el Dockerfile para ejecutarlo 
docker build -t nombre_imagen_nueva .
// Procedemos a crear el container
[--rm] Es para que elimine el contenedor cuando se detenga
docker run --rm  --name nombre_container_nuevo -p 3000:3000 nombre_imagen



:::::::::::::::::::::::::::::::::::::::::SISTEMAS OPERATIVOS::::::::::::::::::::::::::::::::::::::::::::::::

:::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::LINUX
:::::::::::::::::::::::::::::::::::::::::::

::::::::Comandos::::::::
[Revisar procesos corriendo del tomcat]
ps aux | grep tomcat

[Eliminar paquetes]
sudo apt-get --purge remove ...nombre del paquete

[Encontrar pid por puerto]
netstat -ano | findstr :4200

[Muestra todos los procesos que se ejecutan en mi sesiÃ³n]
ps

[Muestra todos los procesos de todas las sesiones]
ps -fea 
